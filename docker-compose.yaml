version: "3.3"

volumes:
  mongo-db:
  grafana-storage:
  prom-data:
  logs:
  prom-db:

services:
  jaeger:
    image: jaegertracing/all-in-one:1.17
    restart: always
    environment: 
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    # ports:
    # - "5775:5775/udp"
    # - "6831:6831/udp"
    # - "6832:6832/udp"
    # - "5778:5778"
    # - "14268:14268"
    # - "14250:14250"
    # - "9411:9411"
    # expose:
    #   - 16686
  mongo:
    image: mongo:4.2
    restart: always
    ports:
    - "27017:27017"
    volumes:
      - "mongo-db:/data/db"
  prom:
    image: prom/prometheus
    restart: always 
    user: '0'
    volumes:
      - ${PWD}/prom/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - "prom-db:/prometheus/"
    ports:
      - "9090:9090"
    depends_on:
      - mongo
  grafana:
    image: grafana/grafana 
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana/
    depends_on:
      - prom
      - mongo
    expose:
      - 3000
  cvbackend:
    image: brainoom/cvmonitor:v0.3.20
    restart: always
    # ports:
    #   - "8088:8088"
    # expose:
    #   - 8088
    environment:
      CVMONITOR_SERVER_OCR: ${CVMONITOR_SERVER_OCR:-FALSE}
      CVMONITOR_SUGGEST_SEGMENT: ${CVMONITOR_SUGGEST_SEGMENT:-FALSE}
      CVMONITOR_SPOTTING_PROB_THRESHOLD: ${CVMONITOR_SPOTTING_PROB_THRESHOLD:-0.3}
      CVMONITOR_SEGMENT_THRESHOLD: ${CVMONITOR_SEGMENT_THRESHOLD:-0.95}
      CVMONITOR_DEVICE_OCR_DEFAULT_SCORE: ${CVMONITOR_DEVICE_OCR_DEFAULT_SCORE:-0.5}
      CVMONITOR_DEVICE_OCR_SCORE_THRESHOLD: ${CVMONITOR_DEVICE_OCR_SCORE_THRESHOLD:-0.8}
      CVMONITOR_SERVER_OCR_THRESHOLD: ${CVMONITOR_SERVER_OCR_THRESHOLD:-0.8}
      CVMONITOR_SPOTTING_MAX_SEQ_LEN: ${CVMONITOR_SPOTTING_MAX_SEQ_LEN:-10}
      CVMONITOR_SPOTTING_IOU_THRESHOLD: ${CVMONITOR_SPOTTING_IOU_THRESHOLD:-0.01}
      CVMONITOR_SPOTTING_MODEL_TYPE: ${CVMONITOR_SPOTTING_MODEL_TYPE:-FP32}
      CVMONITOR_ORIENT_BY_EXIF: ${CVMONITOR_ORIENT_BY_EXIF:-TRUE}
      CVMONITOR_ORIENT_BY_QR: ${CVMONITOR_ORIENT_BY_QR:-FALSE}
      CVMONITOR_QR_PREFIX: ${CVMONITOR_QR_PREFIX:-cvmonitor}
      CVMONITOR_QR_TARGET_SIZE: ${CVMONITOR_QR_TARGET_SIZE:-100}
      CVMONITOR_QR_BOUNDERY_SIZE: ${CVMONITOR_QR_BOUNDERY_SIZE:-50}
      CVMONITOR_SKIP_ALIGN: ${CVMONITOR_SKIP_ALIGN:-TRUE}
      CVMONITOR_SAVE_BEFORE_ALIGN: ${CVMONITOR_SAVE_BEFORE_ALIGN:-FALSE}
      CVMONITOR_SAVE_AFTER_ALIGN: ${CVMONITOR_SAVE_AFTER_ALIGN:-FALSE}
      CVMONITOR_OCR_SPOTTING: ${CVMONITOR_OCR_SPOTTING:-TRUE}
      CVMONITOR_QR_PDF_ROWS: ${CVMONITOR_QR_PDF_ROWS:-6}
      CVMONITOR_QR_PDF_COLS: ${CVMONITOR_QR_PDF_COLS:-4}
      CVMONITOR_LOG_LEVEL: ${CVMONITOR_LOG_LEVEL:-DEBUG}
      CVMONITOR_HOST: ${CVMONITOR_HOST:-0.0.0.0}
      CVMONITOR_PORT: ${CVMONITOR_PORT:-8088}
      CVMONITOR_THRESHOLD_CHARACTER: ${CVMONITOR_THRESHOLD_CHARACTER:-0.95}
    depends_on: 
       - jaeger
    volumes:
      - "logs:/opt/app/logs"
  backend:
    image: yehiyam/monitor-backend:v0.0.27
    restart: always
    # ports:
    #   - "80:3000"
    # expose:
    #   - 80
    environment:
      CVMONITOR_HOST: cvbackend
      DB_CONNECTION: mongodb://mongo/test
    depends_on:
      - cvbackend
      - mongo
      - jaeger
  frontend:
      image: registry.gitlab.com/or2511/covid-frontend:version-1-0-8
      restart: always
      ports:
        - "4200:4200"
      expose:
        - 4200
      depends_on: 
        - backend
  nginx:
    image: nginx
    restart: always
    ports:
    #  - "443:443"
      - "80:80"
    volumes:
    - ${PWD}/nginx/conf/reverse.conf:/etc/nginx/conf.d/default.conf
    #- ${PWD}/nginx/certs:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
      - cvbackend